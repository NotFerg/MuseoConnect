<!-- loggedIngames -->
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta content="width=device-width, initial-scale=1.0" name="viewport">

  <title>MuseoConnect - Games</title>
  <meta content="" name="description">
  <meta content="" name="keywords">

  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700" rel="stylesheet">

  <link href="assets/vendor/animate.css/animate.min.css" rel="stylesheet">
  <link href="assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
  <link href="assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
  <link href="assets/vendor/swiper/swiper-bundle.min.css" rel="stylesheet">
  <link href="images/MuseoDeLaSalle.png" type="image/jpeg" rel="icon">

  <!-- Template Main CSS File -->
  <link href="assets/css/style.css" rel="stylesheet">

  <style>
    .leaderboard {
      background-color: #f8f9fa;
      border-radius: 15px;
      box-shadow: 10px 10px 10px rgba(45, 192, 16, 0.13);
      padding: 30px;
      border: 2px solid #28a745;
      margin-top: 30px;
      /* Adjust as needed */
    }

    .quiz-title {
      font-size: 40px;
      font-weight: bold;
      color: #000000;
      text-align: center;
      margin-bottom: 20px;
    }

    .leaderboard-list {
      list-style-type: none;
      padding: 0;
      margin: 0;
    }

    .leaderboard-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      border-bottom: 1px solid #d3d3d3;
      /* Add a border between items */
      padding: 10px 0;
      /* Adjust padding as needed */
    }

    .leaderboard-name {
      font-size: 20px;
      color: #495057;
    }

    .leaderboard-score {
      font-size: 18px;
      color: #28a745;
    }

    .quiz-card {
      background-color: #f8f9fa;
      border-radius: 15px;
      box-shadow: 10px 10px 10px rgba(45, 192, 16, 0.13);
      padding: 30px;
      /* Increase padding for a larger card */
      border: 2px solid #28a745;
      /* Set border color to success color */
    }

    .quiz-title {
      font-size: 40px;
      /* Increase font size for the title */
      font-weight: bold;
      color: #000000;
      margin-bottom: 30px;
      /* Increase margin for spacing */
      text-align: center;
    }

    .quiz-question {
      font-size: 24px;
      /* Increase font size for the question */
      color: #495057;
      margin-bottom: 20px;
      /* Increase margin for spacing */
    }

    .quiz-options {
      list-style-type: none;
      padding: 0;
      display: flex;
      flex-direction: column;
      margin: 0;
    }

    .quiz-options li {
      margin-bottom: 15px;
      /* Increase margin between options */
    }

    .quiz-options label {
      display: inline-block;
      cursor: pointer;
      border: 2px solid #28a745;
      background-color: #fff;
      color: #000000;
      padding: 20px;
      /* Increase padding for larger buttons */
      border-radius: 8px;
      /* Increase border radius for rounded corners */
      transition: background-color 0.3s ease, color 0.3s ease;
      width: 100%;
      text-align: left;
      /* Align text to the left */
      font-size: 18px;
      /* Increase font size for the options */
    }

    .quiz-options input[type="radio"] {
      display: none;
    }

    .quiz-options input[type="radio"]:checked+label {
      background-color: #0056b3;
      color: #fff;
    }

    .quiz-btn {
      margin-top: 30px;
      /* Increase margin for spacing */
      background-color: #28a745;
      color: #fff;
      border: none;
      border-radius: 8px;
      padding: 20px;
      /* Increase padding for a larger button */
      font-size: 20px;
      /* Increase font size for the button */
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    .quiz-btn:hover {
      background-color: #218838;
    }

    .quiz-options label:hover {
      background-color: #28a745;
      color: #fff;
    }

    .quiz-options input[type="radio"]:checked+label {
      background-color: #28a745;
      color: #fff;
    }

    .quiz-progress {
      font-size: 18px;
      text-align: center;
      margin-top: 15px;
      color: #28a745;
    }
  </style>
</head>

<body>
  <!-- Navbar -->
  <nav class="navbar navbar-default navbar-trans navbar-expand-lg fixed-top">
    <div class="container">
      <button class="navbar-toggler collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#navbarDefault"
        aria-controls="navbarDefault" aria-expanded="false" aria-label="Toggle navigation">
        <span></span>
        <span></span>
        <span></span>
      </button>
      <a class="navbar-brand text-brand" href="/loggedInindex">Museo<span class="color-b">Connect</span></a>

      <div class="navbar-collapse collapse justify-content-center" id="navbarDefault">
        <ul class="navbar-nav">

          <li class="nav-item">
            <a class="nav-link" href="/loggedInindex">Home</a>
          </li>

          <li class="nav-item">
            <a class="nav-link " href="/loggedInaboutUs">About us</a>
          </li>

          <li class="nav-item">
            <a class="nav-link" href="/loggedIndonation">Donation</a>
          </li>

          <li class="nav-item">
            <a class="nav-link" href="/loggedInartifacts">Artifacts</a>
          </li>

          <li class="nav-item">
            <a class="nav-link" href="/loggedInvirtualTour">Virtual Tour</a>
          </li>

          <li class="nav-item">
            <a class="nav-link active" href="/loggedIngames">Games</a>
          </li>

          <li class="nav-item">
            <a class="nav-link " href="/loggedInreservation">Reservation</a>
          </li>

          <li class="nav-item">
            <a class="nav-link " href="/loggedInevaluation">Evaluation</a>
          </li>

          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown"
              aria-haspopup="true" aria-expanded="false">Account</a>
            <div class="dropdown-menu">
              <a class="dropdown-item " href="/loggedInaccountInformation">Account Information</a>
              <a class="dropdown-item " href="/logout">Log Out</a>
            </div>
          </li>
        </ul>
      </div>
    </div>
  </nav><!-- End Header/Navbar -->

  <main id="main">
    <!-- ======= Intro Single ======= -->
    <section class="intro-single">
      <div class="container">
        <div class="row">
          <div class="col-md-12 col-lg-8">
            <div class="title-single-box d-flex align-items-center">
              <img src="/images/games.png" alt="Image" class="img-fluid" style="max-width: 100px; max-height: 100px;">
              <h1 class="title-single">Games</h1>
            </div>
          </div>
          <div class="col-md-12 col-lg-4">
            <nav aria-label="breadcrumb" class="breadcrumb-box d-flex justify-content-lg-end">
              <ol class="breadcrumb">
                <li class="breadcrumb-item">
                  <a href="/loggedInindex">Home</a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">
                  Games
                </li>
              </ol>
            </nav>
          </div>

          <div id="quiz-container" class="container my-5">
            <div class="row justify-content-center">
              <div class="col-12 col-md-9 col-lg-8">
                <div class="card quiz-card">
                  <div class="card-body">
                    <div id="question-container">
 <button id="start-quiz-btn" class="quiz-btn">Start Quiz</button>
                      <p id="user-score">User Score: 0</p>
                      </p>
                      <% quizQuestions.forEach((question, index)=> { %>
                        <div class="quiz-question" data-question-index="<%= index %>"
                          style="display: <%= index === 0 ? 'block' : 'none' %>;">
                          <h3 class="quiz-title">
                            <%= question.question %>
                          </h3>
                          <% if (question.type==='multiple-choice' ) { %>
                            <ul class="quiz-options">
                              <% question.options.forEach((option, optionIndex)=> { %>
                                <li>
                                  <input type="radio" id="option-<%= index %>-<%= optionIndex %>"
                                    name="question_<%= index %>" value="<%= option.trim() %>">
                                  <label for="option-<%= index %>-<%= optionIndex %>">
                                    <%= option.trim() %>
                                  </label>
                                </li>
                                <% }); %>
                            </ul>
                            <button class="quiz-btn" id="submit-btn-<%= index %>">Submit</button>

                            <% } else { %>
                              <input type="text" id="input-answer-<%= index %>" class="form-control"
                                placeholder="Your answer">
                                <button class="quiz-btn" id="submit-btn-<%= index %>">Submit</button>

                              <% } %>
                                <p id="result-message-<%= index %>" class="quiz-result-message"></p>
                        </div>
                        <% }); %>
                          <button id="next-question-btn" class="quiz-btn" onclick="showNextQuestion(event)"
                            style="display: none;">Next
                            Question</button>

                    </div>
                  </div>
                </div>
              </div>

                           
            </div>
            <br><br><br><br>

            <div class="leaderboard">
              <h3 class="quiz-title">Leaderboard</h3>
              <ul class="leaderboard-list">
                <% leaderboard.forEach(function(user) { %>
                  <li class="leaderboard-item">
                    <span class="leaderboard-name">
                      <%= user.name %>
                    </span>
                    <span class="leaderboard-score">Score - <%= user.score %></span>
                    <!-- Display the date when the score was achieved -->
                    <span class="leaderboard-date">
                      Date - <%= user.scoreDate %>
                    </span>
                  </li>
                <% }); %>
              </ul>
            </div>

          </div>
  </main>
  <br><br>


  <!-- Footer -->
  <footer>
    <div class="container">
      <div class="row">
        <div class="col-md-12">

          <div class="copyright-footer">
            <p class="copyright color-text-a">
              <span class="color-a"> © All Rights Reserved 2023, Fergus Ampuan, Rasheed Taban, Lemuel Palgan
            </p>
            <% if (user && user.name) { %>
              <p hidden>Welcome, <%= user.name %>
              </p>
              <% } else { %>
                <p hidden>User is not logged in</p>
                <script>
                  // Redirect to the logout route when user.name is empty
                  window.location.href = "/logout";
                </script>
                <% } %>
          </div>
        </div>
      </div>
    </div>
  </footer><!-- End  Footer -->


  <div id="preloader"></div>
  <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i
      class="bi bi-arrow-up-short"></i></a>

  <script src="assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
  <script src="assets/vendor/swiper/swiper-bundle.min.js"></script>
  <script src="assets/vendor/php-email-form/validate.js"></script>
  <script src="/js/index.js"></script>
  <script>

//TEST

function startNewQuiz() {
  // Your quizQuestions variable
  let quizQuestions = <%= JSON.stringify(quizQuestions) %>;

  // Shuffle the order of quiz questions randomly
  shuffleArray(quizQuestions);

  // Reset any other quiz-related variables or UI elements if needed

  // Show the first question
  showQuestion(0);
}

// Wait for the DOM to be fully loaded before attaching event listeners
document.addEventListener('DOMContentLoaded', function() {
  // Attach event listener to a button or element that starts a new quiz
  const startQuizButton = document.getElementById('start-quiz-btn');
  if (startQuizButton) {
    startQuizButton.addEventListener('click', function() {
      startNewQuiz();
    });
  }

  // Attach event listeners to submit buttons
  <% quizQuestions.forEach((question, index) => { %>
    var button = document.getElementById('submit-btn-<%= index %>');
    if (button) {
      button.addEventListener('click', function(event) {
        // Note: Here we're using JSON.stringify to ensure the string is properly formatted and escaped
        submitAnswer(event, <%= index %>, <%- JSON.stringify(question.correctAnswer) %>);
      });
    }
  <% }); %>
});


function shuffleArray(array) {
    for (let i = array.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [array[i], array[j]] = [array[j], array[i]];
    }
  }

  // Your quizQuestions variable
  let quizQuestions = <%= JSON.stringify(quizQuestions) %>;

  // Shuffle the order of quiz questions randomly
  shuffleArray(quizQuestions);



    // Function to decode HTML entities
    function htmlDecode(input){
      var e = document.createElement('textarea');
      e.innerHTML = input;
      // Handle case of empty input
      return e.childNodes.length === 0 ? "" : e.childNodes[0].nodeValue;
    }
  
    // Define functions in the global scope
    function submitAnswer(event, questionIndex, correctAnswer) {
      event.preventDefault(); // Prevent form submission
      let userAnswer;
    
      // Check if a multiple-choice answer is selected or if it's a text input
      if (document.querySelector(`input[name="question_${questionIndex}"]:checked`)) {
        userAnswer = document.querySelector(`input[name="question_${questionIndex}"]:checked`).value;
      } else {
        userAnswer = document.getElementById(`input-answer-${questionIndex}`).value;
      }
    
      // Decode HTML entities and check the user's answer and update the score
      const decodedCorrectAnswer = htmlDecode(correctAnswer);
      if (userAnswer.toLowerCase().trim() === decodedCorrectAnswer.toLowerCase()) {
        userScore++;
        alert('Correct!');
      } else {
        alert('Incorrect. The correct answer was ' + decodedCorrectAnswer);
      }
    
      document.getElementById('user-score').textContent = 'User Score: ' + userScore;
    
      // Show the next question or end the quiz
      if (currentQuestionIndex < totalQuestions - 1) {
        currentQuestionIndex++;
        showQuestion(currentQuestionIndex);
      } else {
        alert('Quiz completed! Final score: ' + userScore);
        submitScore(userScore);
      }
    }
  
    function showQuestion(index) {
      // Hide all questions
      document.querySelectorAll('.quiz-question').forEach(function(questionDiv) {
        questionDiv.style.display = 'none';
      });
  
      // Show the current question
      document.querySelector(`.quiz-question[data-question-index="${index}"]`).style.display = 'block';
    }
  
    // Global variables
    let userScore = 0;
    let currentQuestionIndex = 0;
    let totalQuestions = <%= quizQuestions.length %>;
  
    // Wait for the DOM to be fully loaded before attaching event listeners
    document.addEventListener('DOMContentLoaded', function() {
      // Attach event listeners to submit buttons
      <% quizQuestions.forEach((question, index) => { %>
        var button = document.getElementById('submit-btn-<%= index %>');
        if (button) {
          button.addEventListener('click', function(event) {
            // Note: Here we're using JSON.stringify to ensure the string is properly formatted and escaped
            submitAnswer(event, <%= index %>, <%- JSON.stringify(question.correctAnswer) %>);
          });
        }
      <% }); %>
    
      // Initially show the first question
      showQuestion(currentQuestionIndex);
    });

    async function submitScore(score) {
  try {
    const response = await fetch('/saveScore', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ score })
    });
    if (response.ok) {
      console.log("Score saved successfully!");
      const data = await response.json();
      window.location.href= "/loggedInaccountInformation";
      // Handle the response data
    } else {
      console.error("Failed to save score");
    }
  } catch (error) {
    console.error("Error in submitScore:", error);
  }
}

  
  </script>
</body>

</html>
